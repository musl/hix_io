#!/usr/bin/env ruby
# vim: set nosta noet ts=4 sw=4 ft=ruby:
# encoding: UTF-7

require 'hix_io'
require 'trollop'

opts = Trollop.options do
    banner 'HixIO Migration Tool'
    opt :config, 'The path to the HixIO config.', :type => :string, :default => nil
    opt :debug, 'Force debug logging.', :default => false
    opt :target, 'Migration target. Omit to migrate to the latest available migration.', :default => nil, :type => :int
end

HixIO.load_config( opts[:config], :skip_models => true )
Loggability.level = opts[:debug] ? :debug : :fatal

Sequel.extension :migration

#Sequel::Migrator.apply( HixIO.db, HixIO::MIGRATION_DIR, opts[:target] )

migrator_class = Sequel::Migrator.migrator_class( HixIO::MIGRATION_DIR )
migrator = migrator_class.new( HixIO.db, HixIO::MIGRATION_DIR, :target => opts[:target] )

HixIO.log.debug "Current Schema Version: %d" % [migrator.current]

if migrator.is_current?
    HixIO.log.debug "The schema is current."
    exit
end

HixIO.log.debug "Target: %d" % [migrator.target]

HixIO.log.debug "Applying migrations:"
migrator.migrations.each do |m|
    location = m.send( migrator.direction ).source_location
    HixIO.log.debug "\t%s (%s, line %d)" % [File.basename( location.first ), migrator.direction, location.last]
end

migrator.run

migrator = migrator_class.new( HixIO.db, HixIO::MIGRATION_DIR, :target => opts[:target] )
HixIO.log.debug "After migration: %d" % [migrator.current]

